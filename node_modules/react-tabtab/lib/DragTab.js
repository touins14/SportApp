'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _dec2, _class;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactDnd = require('react-dnd');

var _ItemTypes = require('./ItemTypes');

var _ItemTypes2 = _interopRequireDefault(_ItemTypes);

var _Tab = require('./Tab');

var _Tab2 = _interopRequireDefault(_Tab);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var tabSource = {
  beginDrag: function beginDrag(props) {
    props.beginDrag();
    return {
      tabKey: props.tabKey
    };
  }
};

// reference from https://github.com/gaearon/react-dnd/tree/master/examples/04%20Sortable/Simple
var tabTarget = {
  hover: function hover(props, monitor, component) {
    var dragIndex = monitor.getItem().tabKey;
    var hoverIndex = props.tabKey;

    // Don't replace items with themselves
    if (dragIndex === hoverIndex) {
      return;
    }

    // Determine rectangle on screen
    var hoverBoundingRect = _reactDom2.default.findDOMNode(component).getBoundingClientRect();

    // Get horizontal middle
    var hoverMiddleX = (hoverBoundingRect.right - hoverBoundingRect.left) / 2;

    // Determine mouse position
    var clientOffset = monitor.getClientOffset();

    var hoverClientX = hoverBoundingRect.right - clientOffset.x;

    // Dragging left
    if (dragIndex < hoverIndex && hoverClientX < hoverMiddleX) {
      return;
    }

    // Dragging right
    if (dragIndex > hoverIndex && hoverClientX > hoverMiddleX) {
      return;
    }

    props.moveTab(dragIndex, hoverIndex);
    // change the dragging tab index
    monitor.getItem().tabKey = hoverIndex;
  }
};

var DragTab = (_dec = (0, _reactDnd.DropTarget)(_ItemTypes2.default.TAB, tabTarget, function (connect) {
  return {
    connectDropTarget: connect.dropTarget()
  };
}), _dec2 = (0, _reactDnd.DragSource)(_ItemTypes2.default.TAB, tabSource, function (connect, monitor) {
  return {
    connectDragSource: connect.dragSource(),
    isDragging: monitor.isDragging()
  };
}), _dec(_class = _dec2(_class = function (_React$Component) {
  _inherits(DragTab, _React$Component);

  function DragTab(props) {
    _classCallCheck(this, DragTab);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(DragTab).call(this, props));
  }

  _createClass(DragTab, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
      var connectDragSource = _props.connectDragSource;
      var connectDropTarget = _props.connectDropTarget;


      return connectDragSource(connectDropTarget(_react2.default.createElement(
        'span',
        null,
        _react2.default.createElement(_Tab2.default, this.props)
      )));
    }
  }]);

  return DragTab;
}(_react2.default.Component)) || _class) || _class);
exports.default = DragTab;
module.exports = exports['default'];