'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _compose = require('recompose/compose');

var _compose2 = _interopRequireDefault(_compose);

var _mapProps = require('recompose/mapProps');

var _mapProps2 = _interopRequireDefault(_mapProps);

var _withHandlers = require('recompose/withHandlers');

var _withHandlers2 = _interopRequireDefault(_withHandlers);

var _dataSelectors = require('../../../selectors/dataSelectors');

var _actions = require('../../../actions');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DefaultTableHeadingCellContent = function DefaultTableHeadingCellContent(_ref) {
  var title = _ref.title,
      icon = _ref.icon;
  return _react2.default.createElement(
    'span',
    null,
    title,
    icon && _react2.default.createElement(
      'span',
      null,
      icon
    )
  );
};

function setSortProperties(_ref2) {
  var setSortColumn = _ref2.setSortColumn,
      sortProperty = _ref2.sortProperty,
      columnId = _ref2.columnId;

  return function (event) {
    if (sortProperty === null) {
      setSortColumn({ id: columnId, sortAscending: true });
      return;
    }

    var newSortProperty = _extends({}, sortProperty, {
      sortAscending: !sortProperty.sortAscending
    });

    setSortColumn(newSortProperty);
  };
}

function getIcon(_ref3) {
  var sortProperty = _ref3.sortProperty,
      sortAscendingIcon = _ref3.sortAscendingIcon,
      sortDescendingIcon = _ref3.sortDescendingIcon;

  if (sortProperty) {
    return sortProperty.sortAscending ? sortAscendingIcon : sortDescendingIcon;
  }

  // return null so we don't render anything if no sortProperty
  return null;
}
var EnhancedHeadingCell = function EnhancedHeadingCell(OriginalComponent) {
  return (0, _compose2.default)((0, _reactRedux.connect)(function (state, props) {
    return _extends({
      sortProperty: (0, _dataSelectors.sortPropertyByIdSelector)(state, props),
      customHeadingComponent: (0, _dataSelectors.customHeadingComponentSelector)(state, props),
      className: (0, _dataSelectors.classNamesForComponentSelector)(state, 'TableHeadingCell'),
      style: (0, _dataSelectors.stylesForComponentSelector)(state, 'TableHeadingCell')
    }, (0, _dataSelectors.iconsForComponentSelector)(state, 'TableHeadingCell'));
  }, {
    setSortColumn: _actions.setSortColumn
  }), (0, _withHandlers2.default)({
    onClick: setSortProperties
  }),
  //TODO: use with props on change or something more performant here
  (0, _mapProps2.default)(function (props) {
    var icon = getIcon(props);
    var title = props.customHeadingComponent ? _react2.default.createElement(props.customHeadingComponent, _extends({}, props, { icon: icon })) : _react2.default.createElement(DefaultTableHeadingCellContent, { title: props.title, icon: icon });
    return _extends({}, props, {
      icon: icon,
      title: title
    });
  }))(function (props) {
    return _react2.default.createElement(OriginalComponent, _extends({}, props, {
      onClick: props.onClick }));
  });
};

exports.default = EnhancedHeadingCell;